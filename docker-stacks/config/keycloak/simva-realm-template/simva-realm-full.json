{
  "id" : "{{ .clients.simva.realmId }}",
  "realm" : "{{ .clients.simva.realmId }}",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "all",
  "registrationAllowed" : true,
  "registrationEmailAsUsername" : false,
  "rememberMe" : true,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : true,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [
      {
        "id" : "24fa5795-371e-45ec-b5ae-6bf4e18c2b3b",
        "name" : "student",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "{{ .clients.simva.realmId }}",
        "attributes" : { }
      },
      {
        "id" : "240ee9db-710f-4c0e-a85c-00373de51eed",
        "name" : "uma_authorization",
        "description" : "${role_uma_authorization}",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "{{ .clients.simva.realmId }}",
        "attributes" : { }
      },
      {
        "id" : "41b71acb-3157-4d88-a0c7-40463783bbcc",
        "name" : "teacher",
        "composite" : true,
        "composites" : {
          "realm" : [
            "teaching-assistant"
          ]
        },
        "clientRole" : false,
        "containerId" : "{{ .clients.simva.realmId }}",
        "attributes" : {
          "policy" : [
            "simva-adv4-user"
          ]
        }
      },
      {
        "id" : "17c646a4-68eb-4231-abb7-bb8abb830304",
        "name" : "administrator",
        "composite" : true,
        "composites" : {
          "realm" : [
            "researcher"
          ]
        },
        "clientRole" : false,
        "containerId" : "{{ .clients.simva.realmId }}",
        "attributes" : { }
      },
      {
        "id" : "9fee483e-4a26-4686-9abe-30ccae18e4bd",
        "name" : "teaching-assistant",
        "composite" : true,
        "composites" : {
          "realm" : [
            "student"
          ]
        },
        "clientRole" : false,
        "containerId" : "{{ .clients.simva.realmId }}",
        "attributes" : { }
      },
      {
        "id" : "bb848d70-8926-4e91-bee9-0932338d0da4",
        "name" : "offline_access",
        "description" : "${role_offline-access}",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "{{ .clients.simva.realmId }}",
        "attributes" : { }
      },
      {
        "id" : "c92eba8b-0518-4cec-92e6-ceea5361e537",
        "name" : "researcher",
        "composite" : true,
        "composites" : {
          "realm" : [
            "teacher"
          ]
        },
        "clientRole" : false,
        "containerId" : "{{ .clients.simva.realmId }}",
        "attributes" : { }
      },
      {
        "id": "61d16051-1807-4d3a-ab11-c209e1ee398f",
        "name": "norole",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "{{ .clients.simva.realmId }}",
        "attributes": { }
      },
      {
        "id" : "928f344c-0a35-4ac9-87d5-d23a315d2935",
        "name" : "default-roles-{{ .clients.simva.realmId }}",
        "description" : "${role_default-roles}",
        "composite" : true,
        "composites" : {
          "realm" : [
            "norole",
            "offline_access",
            "uma_authorization"
          ],
          "client" : {
            "account" : [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole" : false,
        "containerId" : "{{ .clients.simva.realmId }}",
        "attributes" : { }
      }
    ],
    "client" : {
      "{{ .clients.limesurvey.clientId }}" : [ ],
      "{{ .clients.jupyter.clientId }}" : [ ],
      "realm-management" : [
        {
          "id" : "33c9b791-8ab1-4875-aab6-2ba98d2e19a3",
          "name" : "view-clients",
          "description" : "${role_view-clients}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [
                "query-clients"
              ]
            }
          },
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "4adb33e7-9e66-4bc9-a078-728817e4d8a0",
          "name" : "view-events",
          "description" : "${role_view-events}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "a828e29c-b432-4daa-b9f4-defe4e30fe9f",
          "name" : "view-authorization",
          "description" : "${role_view-authorization}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "c30b3103-b6c1-4a88-ae3e-fd4cd256469a",
          "name" : "realm-admin",
          "description" : "${role_realm-admin}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [
                "view-clients",
                "view-events",
                "view-authorization",
                "create-client",
                "manage-authorization",
                "manage-realm",
                "manage-identity-providers",
                "query-clients",
                "query-groups",
                "manage-clients",
                "impersonation",
                "query-realms",
                "view-users",
                "query-users",
                "view-realm",
                "publish-events",
                "view-identity-providers",
                "manage-events",
                "manage-users"
              ]
            }
          },
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "3eeb3a72-7cd1-4de1-ad16-4eb6089d1a30",
          "name" : "create-client",
          "description" : "${role_create-client}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "9dde1d97-187f-4554-8c9e-e929a641c0e3",
          "name" : "manage-authorization",
          "description" : "${role_manage-authorization}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "f3e0f54e-5d6d-495c-b0b6-204a49586b81",
          "name" : "manage-realm",
          "description" : "${role_manage-realm}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "615ee46d-d407-4fac-9bcc-39791fd37a44",
          "name" : "manage-identity-providers",
          "description" : "${role_manage-identity-providers}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "a9163e7a-b692-478e-aabb-4a605b8db0a6",
          "name" : "query-clients",
          "description" : "${role_query-clients}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "dbd4930d-903d-48d4-b5c5-838a2ceda0b9",
          "name" : "query-groups",
          "description" : "${role_query-groups}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "ffa3115d-9100-4deb-9f7f-b0baf47b7193",
          "name" : "manage-clients",
          "description" : "${role_manage-clients}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "8957b124-4d84-43eb-b86a-abe6efe73b31",
          "name" : "impersonation",
          "description" : "${role_impersonation}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "eebc8131-0e67-4f06-88e1-9100f627914f",
          "name" : "query-realms",
          "description" : "${role_query-realms}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "34e96311-1a17-43f9-964d-e30bcb471583",
          "name" : "view-users",
          "description" : "${role_view-users}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "c073f90a-38bf-4d26-bb0f-54facfcdd8d9",
          "name" : "query-users",
          "description" : "${role_query-users}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "e1b6e7dc-566e-4ca1-93f0-fb9f6273af9b",
          "name" : "view-realm",
          "description" : "${role_view-realm}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "cab3d4a4-7fa6-44c7-ac60-8080331f72e2",
          "name" : "view-identity-providers",
          "description" : "${role_view-identity-providers}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "75928ffa-49f0-4ba6-8244-8fd9f8aff097",
          "name" : "manage-events",
          "description" : "${role_manage-events}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "a19207ea-de18-459f-aed5-5ced8cf7367c",
          "name" : "manage-users",
          "description" : "${role_manage-users}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        },
        {
          "id" : "29241ddc-6988-4733-aa90-a6b14ea844c8",
          "name" : "publish-events",
          "description" : "${role_publish-events}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
          "attributes" : { }
        }
      ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [
        {
          "id" : "f87eec10-eb87-431f-b29d-c144bf3e9efc",
          "name" : "read-token",
          "description" : "${role_read-token}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "075bbc66-a6d8-4a8e-96bb-72dcfe427662",
          "attributes" : { }
        }
      ],
      "{{ .clients.minio.clientId }}" : [ ],
      "account" : [
        {
          "id" : "a08e7db7-b6fe-4e81-b772-7dc717328307",
          "name" : "manage-account-links",
          "description" : "${role_manage-account-links}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "45b3fc1d-df25-475e-879a-487d16e88918",
          "attributes" : { }
        },
        {
          "id" : "4edef8b7-1e24-4bf0-bb20-f0fb8a3670ae",
          "name" : "manage-consent",
          "description" : "${role_manage-consent}",
          "composite" : true,
          "composites" : {
            "client" : {
              "account" : [
                "view-consent"
              ]
            }
          },
          "clientRole" : true,
          "containerId" : "45b3fc1d-df25-475e-879a-487d16e88918",
          "attributes" : { }
        },
        {
          "id" : "515f62a6-5f89-47d8-8999-bdd1e242f2f9",
          "name" : "view-profile",
          "description" : "${role_view-profile}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "45b3fc1d-df25-475e-879a-487d16e88918",
          "attributes" : { }
        },
        {
          "id" : "57c527d7-ab45-44ac-a6ca-f2e3c61e8f8e",
          "name" : "view-consent",
          "description" : "${role_view-consent}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "45b3fc1d-df25-475e-879a-487d16e88918",
          "attributes" : { }
        },
        {
          "id" : "979db10e-e6df-410d-b187-9917eafba0f0",
          "name" : "view-applications",
          "description" : "${role_view-applications}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "45b3fc1d-df25-475e-879a-487d16e88918",
          "attributes" : { }
        },
        {
          "id" : "c13d5f4b-6a93-4eb7-89f5-d3788999e3f8",
          "name" : "manage-account",
          "description" : "${role_manage-account}",
          "composite" : true,
          "composites" : {
            "client" : {
              "account" : [
                "manage-account-links"
              ]
            }
          },
          "clientRole" : true,
          "containerId" : "45b3fc1d-df25-475e-879a-487d16e88918",
          "attributes" : { }
        },
        {
          "id" : "ea12f279-2aa1-4968-b7c0-4cbbbcc49596",
          "name" : "delete-account",
          "description" : "${role_delete-account}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "45b3fc1d-df25-475e-879a-487d16e88918",
          "attributes" : { }
        },
        {
          "id" : "c7f48c4b-46eb-44c0-b7b0-de017a3cf0e4",
          "name" : "view-groups",
          "description" : "${role_view-groups}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "45b3fc1d-df25-475e-879a-487d16e88918",
          "attributes" : { }
        }
      ],
      "simva-plugin" : [],
      "uadventure" : []
    }
  },
  "groups" : [],
  "defaultRole" : {
    "id" : "928f344c-0a35-4ac9-87d5-d23a315d2935",
    "name" : "default-roles-{{ .clients.simva.realmId }}",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "{{ .clients.simva.realmId }}"
  },
  "requiredCredentials" : [
    "password"
  ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [
    "ES256"
  ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [],
  "webAuthnPolicyExtraOrigins" : [],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [],
  "webAuthnPolicyPasswordlessExtraOrigins" : [],
  "scopeMappings" : [
    {
      "clientScope" : "offline_access",
      "roles" : [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings" : {
    "account" : [
      {
        "client" : "account-console",
        "roles" : [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients" : [
    {
      "id" : "45b3fc1d-df25-475e-879a-487d16e88918",
      "clientId" : "account",
      "name" : "${client_account}",
      "rootUrl" : "${authBaseUrl}",
      "baseUrl" : "/realms/{{ .clients.simva.realmId }}/account/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "**********",
      "redirectUris" : [
        "/realms/{{ .clients.simva.realmId }}/account/*"
      ],
      "webOrigins" : [],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "fa3cc766-84af-444c-88dc-e45469487613",
      "clientId" : "account-console",
      "name" : "${client_account-console}",
      "rootUrl" : "${authBaseUrl}",
      "baseUrl" : "/realms/{{ .clients.simva.realmId }}/account/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "**********",
      "redirectUris" : [
        "/realms/{{ .clients.simva.realmId }}/account/*"
      ],
      "webOrigins" : [],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "post.logout.redirect.uris" : "+",
        "pkce.code.challenge.method" : "S256"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "protocolMappers" : [
        {
          "id" : "5ce20609-5ebb-4e4c-848b-52b254be790e",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        }
      ],
      "defaultClientScopes" : [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "469be395-e752-4c3b-8fdb-aada74f70d98",
      "clientId" : "admin-cli",
      "name" : "${client_admin-cli}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "**********",
      "redirectUris" : [],
      "webOrigins" : [],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "075bbc66-a6d8-4a8e-96bb-72dcfe427662",
      "clientId" : "broker",
      "name" : "${client_broker}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "**********",
      "redirectUris" : [],
      "webOrigins" : [],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "11c9bde7-5875-4fc7-88b7-02425ed57543",
      "clientId" : "{{ .clients.limesurvey.clientId }}",
      "name" : "",
      "description" : "",
      "rootUrl" : "",
      "adminUrl" : "",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : true,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "{{ .clients.limesurvey.secret }}",
      "baseUrl" : "{{ .clients.limesurvey.baseUrl }}/admin",
      "redirectUris" : [ "{{ .clients.limesurvey.sspBaseUrl }}/saml2-acs.php/{{ .clients.limesurvey.clientId }}" ],
      "webOrigins" : [ "{{ .clients.limesurvey.baseUrl }}" ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : false,
      "frontchannelLogout" : true,
      "protocol" : "saml",
      "attributes" : {
        "saml.assertion.signature" : "false",
        "saml.force.post.binding" : "true",
        "saml.encrypt" : "true",
        "saml_assertion_consumer_url_post" : "{{ .clients.limesurvey.sspBaseUrl }}/saml2-acs.php/{{ .clients.limesurvey.clientId }}",
        "saml.server.signature" : "true",
        "saml.server.signature.keyinfo.ext" : "false",
        "saml.signing.certificate" : "{{ .clients.limesurvey.certificate }}",
        "saml_single_logout_service_url_redirect" : "{{ .clients.limesurvey.sspBaseUrl }}/saml2-logout.php/{{ .clients.limesurvey.clientId }}",
        "saml.signature.algorithm" : "RSA_SHA256",
        "saml_force_name_id_format" : "false",
        "saml.client.signature" : "true",
        "saml.encryption.certificate" : "{{ .clients.limesurvey.certificate }}",
        "saml.authnstatement" : "true",
        "saml_name_id_format" : "username",
        "saml.allow.ecp.flow" : "false",
        "saml.onetimeuse.condition" : "false",
        "saml.server.signature.keyinfo.xmlSigKeyInfoKeyNameTransformer" : "NONE",
        "saml_signature_canonicalization_method" : "http://www.w3.org/2001/10/xml-exc-c14n#",
        "post.logout.redirect.uris" : "+"
      },
      "authenticationFlowBindingOverrides" : { },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "defaultClientScopes" : [
        "web-origins",
        "saml_group_list",
        "saml_fullname",
        "role_list",
        "profile", 
        "roles",
        "saml_mail",
        "saml_uid",
        "email",
        "saml_username"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "access" : {
        "view" : true,
        "configure" : true,
        "manage" : true
      }
    }, 
    {
      "id": "99f4b767-b158-4d61-b418-b6d3e988c91d",
      "clientId" : "{{ .clients.minio.clientId }}",
      "rootUrl" : "{{ .clients.minio.baseUrl }}",
      "baseUrl": "{{ .clients.minio.baseUrl }}",
      "adminUrl" : "{{ .clients.minio.baseUrl }}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "{{ .clients.minio.secret }}",
      "redirectUris": [
      "{{ .clients.minio.baseUrl }}/*"
      ],
      "webOrigins": [
        "{{ .clients.minio.baseUrl }}"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "access.token.lifespan": "3600",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "post.logout.redirect.uris": "+",
        "saml.clients.signature": "false",
        "tls.clients.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": { },
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "policy_role_attribute",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d4174974-0dae-4222-9e6f-1ee3edca5c5d",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": { },
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a3406bb3-7779-452d-954a-514be82e4b74",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/{{ .clients.simva.realmId }}/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/admin/{{ .clients.simva.realmId }}/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": { },
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "466bb860-5c91-478f-bc82-651c89297c4f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "caa0515a-884a-4cd5-8821-6b56a44d9683",
      "clientId" : "{{ .clients.simva.clientId }}",
      "rootUrl" : "{{ .clients.simva.baseUrl }}",
      "adminUrl" : "{{ .clients.simva.baseUrl }}",
      "baseUrl" : "{{ .clients.simva.baseUrl }}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "{{ .clients.simva.secret }}",
      "redirectUris": [
        "{{ .clients.simva.baseUrl }}/*"
      ],
      "webOrigins": [
        "{{ .clients.simva.baseUrl }}"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.clients.signature": "false",
        "tls.clients.certificate.bound.access.tokens": "false",
        "post.logout.redirect.uris": "+",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": { },
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "xdd5272e-f8a5-41be-af2a-d60021980ee1",
      "clientId": "{{ .clients.lti_platform.clientId }}",
      "baseUrl" : "{{ .clients.lti_platform.baseUrl }}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "{{ .clients.lti_platform.secret }}",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.clients.signature": "false",
        "post.logout.redirect.uris": "+",
        "tls.clients.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": { },
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a04e69ce-95d9-46d8-bf33-de787fcf65f6",
      "clientId": "simva-plugin",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.clients.signature": "false",
        "post.logout.redirect.uris": "+",
        "tls.clients.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": { },
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "76e5a2e1-7f65-477a-894c-74ee000d4463",
      "clientId": "uadventure",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "access.token.lifespan": "604800",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.clients.signature": "false",
        "post.logout.redirect.uris": "+",
        "tls.clients.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "client.session.max.lifespan": "604800",
        "client.session.idle.timeout": "604800",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": { },
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2e52267c-a0d1-410f-b8b2-ee33119e9ab9",
      "clientId": "{{ .clients.jupyter.clientId }}",
      "adminUrl": "http://localhost:8888",
      "baseUrl" : "{{ .clients.jupyter.baseUrl }}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "{{ .clients.jupyter.secret }}",
      "redirectUris": [
        "http://localhost:8888/*"
      ],
      "webOrigins": [
        "http://localhost:8888"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": { },
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "policy_role_attribute",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "08b2e074-6c40-4b4e-bb96-4a55b4b6b250",
      "name": "https://purl.imsglobal.org/spec/lti-ap/scope/control.all",
      "description": "https://purl.imsglobal.org/spec/lti-ap/scope/control.all",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "15769ada-8b09-44ca-8282-12139b3a94b2",
      "name": "https://purl.imsglobal.org/spec/lti-nrps/scope/contextmembership.readonly",
      "description": "https://purl.imsglobal.org/spec/lti-nrps/scope/contextmembership.readonly",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "3c64e095-0256-4b48-97de-ead68af607bf",
      "name": "https://purl.imsglobal.org/spec/lti-ags/scope/lineitem",
      "description": "https://purl.imsglobal.org/spec/lti-ags/scope/lineitem",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "3d5d9e1f-a12b-4d3f-8c7f-d0e7c034e766",
      "name": "https://purl.imsglobal.org/spec/lti-ags/scope/lineitem.readonly",
      "description": "https://purl.imsglobal.org/spec/lti-ags/scope/lineitem.readonly",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "3f9730f4-9dea-415d-809b-aa5663c1a33e",
      "name": "https://purl.imsglobal.org/spec/lti-ags/scope/result.readonly",
      "description": "https://purl.imsglobal.org/spec/lti-ags/scope/result.readonly",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "0d4ad893-6c6f-4150-9dd1-40761cf91c9f",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "dc54b79c-da6a-48b6-9dbf-8d52473144ae",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    
    {
      "id": "16072461-d02a-4c8a-b9bb-2a99683a5d48",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "42acf829-2096-4c16-9d5c-e5ad414a67fa",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "429e9928-e885-4e94-be6b-124b0d14386f",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "fd318263-198e-4046-a71a-b18ab6a0ddc8",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "30b58db6-49b2-4fa4-a533-b57552464a69",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    
    {
      "id": "53b00904-a14a-4a06-baa7-d329f6d97b19",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "cf3a67f7-967c-4e6f-876f-0e6cd499c5df",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f19b7da0-7905-4e9b-94e7-1a73a918b5b7",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "6272ecbe-dc30-4e09-819f-2b822561c25a",
      "name": "saml_group_list",
      "description": "User's groups",
      "protocol": "saml",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "2137d8eb-32c0-4797-8ed9-3a80d58e1d87",
          "name": "group_list",
          "protocol": "saml",
          "protocolMapper": "saml-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "full.path": "true",
            "friendly.name": "Group where the user participates",
            "attribute.name": "member"
          }
        }
      ]
    },
    {
      "id": "6818b21b-ebce-4fba-a8a4-878059918223",
      "name": "saml_uid",
      "description": "User identifier",
      "protocol": "saml",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "aa604da6-cf9c-4583-8649-f8dea7007d0a",
          "name": "uid",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "id",
            "friendly.name": "User identifier",
            "attribute.name": "uid"
          }
        }
      ]
    },
    {
      "id": "71d4add0-d6c2-4482-933d-67dccba44472",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "622c99bd-8ef0-4d54-b23a-50bd95f2c5c5",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0f85a551-eb7d-4385-81e9-c7ed20238954",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "78ed5aef-0706-4a19-b5f5-7641543ca238",
      "name": "saml_mail",
      "description": "User email",
      "protocol": "saml",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3452e60d-e195-487a-9a56-c91fbf6ad450",
          "name": "email verified",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "emailVerified",
            "friendly.name": "Represent if the user's email has been verified",
            "attribute.name": "email_verified"
          }
        },
        {
          "id": "50964a82-33db-46de-a1d8-f9585b2437fa",
          "name": "mail",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "email",
            "friendly.name": "User email",
            "attribute.name": "mail"
          }
        }
      ]
    },
    {
      "id": "7df310dd-103a-4135-abcb-c08baaa00728",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "44b20215-1142-4d96-8576-2b6a0a834282",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": { }
        }
      ]
    },
    {
      "id": "881f55a4-246d-4da7-99e5-606864ee561f",
      "name": "saml_fullname",
      "description": "User Full name",
      "protocol": "saml",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "6c364893-5d3a-4489-bde6-7942837de38a",
          "name": "fullname",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "username",
            "friendly.name": "User's Full name",
            "attribute.name": "fullname"
          }
        }
      ]
    },
    {
      "id": "89ed7e04-02cf-477a-bb98-a7859847eada",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "344a0a26-b83e-4a00-a26b-42a9265d7cb2",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3dc54cc6-54a5-4130-abfe-bb36ea38f2ba",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4377a90e-0766-43eb-8a8d-3b3eda0b44d5",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "61afb2a4-cd00-480a-9b9f-09f4a16da9a3",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4e0b312f-f174-4af0-a937-2804b668fc02",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2e2708c9-39a8-425e-92a7-bb5c5572a38f",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dfb536c5-1cfe-49f6-bded-4465d4b322ad",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "42d728c2-4f39-485c-ad5e-2b6581040934",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a8262837-9fcd-48e6-912f-4499790b2d17",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "df038f3b-f93c-46b8-a8bd-281a89450e47",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "31c64bd3-66e8-4035-8306-3d8c914c726b",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "44ec48ca-a9b9-47c4-92cb-7fc249247eb2",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7ac773db-a285-4662-9282-7b872a8ce58d",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7ad7359b-7b99-4272-8107-2e988943ad85",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "92f8dbcb-8390-4058-9eb4-3d3aea26cc9a",
      "name": "policy_role_attribute",
      "description": "Policy role attribute",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "4a93092f-8ee5-40cb-8db6-57b15c8a998f",
          "name": "policy_role_attribute",
          "protocol": "openid-connect",
          "protocolMapper": "policy-role-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "policy",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "policy",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    
    {
      "id": "a95d4aad-0376-4fc4-9aa5-a490d1d7ec6f",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "b13f8c6e-c20d-45c2-a2de-74a4f437be56",
      "name": "saml_username",
      "description": "User's username",
      "protocol": "saml",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b0351dd6-2076-4ac8-a42c-501616db9113",
          "name": "username",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "username",
            "friendly.name": "User name",
            "attribute.name": "username"
          }
        }
      ]
    },
    
    {
      "id": "d3b1fc57-48b4-4938-b376-a3b767aab6d1",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2a59ce91-6067-4251-9441-8995fe9f4e48",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "53355898-f2fb-4d8e-886d-8867635cb232",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": { }
        },
        {
          "id": "e44a75ec-8b78-4a50-8723-7dbf455fd5b0",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "58bb01fd-7ace-4b6d-afdb-d588e0b95efb",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "5d26bcff-26c4-4c61-895d-c92f81e2d6bf",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "acr",
    "email",
    "web-origins",
    "profile",
    "roles"
  ],
  "defaultOptionalClientScopes": [
    "address",
    "phone",
    "microprofile-jwt",
    "offline_access"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "strict-origin-when-cross-origin",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {
    "host": "{{ .smtpServer.host }}",
    "port": "{{ .smtpServer.port }}",
    "fromDisplayName": "{{ .smtpServer.fromDisplayName }}",
    "from": "{{ .smtpServer.from }}",
    "replyToDisplayName": "{{ .smtpServer.replyToDisplayName }}",
    "replyTo": "{{ .smtpServer.replyTo }}",
    "envelopeFrom": "{{ .smtpServer.envelopeFrom }}",
    "ssl": "{{ .smtpServer.ssl }}",
    "starttls": "{{ .smtpServer.starttls }}",
    "auth": "{{ .smtpServer.auth }}",
    "user": "{{ .smtpServer.user }}",
    "password": "{{ .smtpServer.password }}"
  },
  "loginTheme": "simva",
  "accountTheme": "simva",
  "emailTheme": "simva",
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "1aa51920-6eba-4391-9288-1e17c72f4cae",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": { },
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "efd5357e-8d0b-4566-840b-a92e6aeb1c43",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": { },
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "1976489d-480a-49c2-a60c-25bb28b14743",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": { },
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "b844af8a-e71c-4503-acd2-fc4cec97a762",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": { },
        "config": { }
      },
      {
        "id": "28406a7d-7ead-46e5-8353-7c714b675ad6",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": { },
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",         
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "71d2b334-6da0-4ff2-80a6-73c9ef8febc9",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": { },
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "8d9af6f1-1127-43d1-9a66-649b2287a1e9",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": { },
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "579adef6-6814-4e26-a0a1-0ff6f5e822ba",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": { },
        "config": { }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "33445963-aeb0-489b-a3df-37734d2b0e1b",
        "providerId": "declarative-user-profile",
        "subComponents": { },
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"annotations\":{\"inputTypePlaceholder\":\"Username\"},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"annotations\":{\"inputTypePlaceholder\":\"Email\"},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"annotations\":{\"inputTypePlaceholder\":\"First Name\"},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"annotations\":{\"inputTypePlaceholder\":\"Last Name\"},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}],\"unmanagedAttributePolicy\":\"ENABLED\"}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "f4bab6dc-42de-49c8-8b5e-0a67c8405c51",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": { },
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "a21c3498-6d72-442f-9001-326ecd68ad54",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": { },
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "a828b77c-ad8b-4ff8-8e7c-1b89d4f921df",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": { },
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "a5bfd742-2f4f-45cd-9ed5-31c1c8655a5d",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": { },
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "0dee4bfe-1a12-42f1-8c64-96c31eb1751e",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": { },
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [
    ""
  ],
  "authenticationFlows": [
    {
      "id": "2631f7d7-fca2-4aa8-8fb1-57ad0333b31c",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d8972f8f-8250-4d99-ba83-c71377f7e538",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ecbf1330-e460-4412-a85e-796eeaccd37b",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7269c410-6558-4487-ac30-8f5bbc5ceece",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b8338af5-6a6f-4cd9-9a00-14b5f2f9bc4c",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "808553e2-86a4-431d-a474-62880dc3858c",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "46e8fdb3-25e0-4e6a-afef-5552d6c77f0d",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cb2793dc-065c-415d-853f-f0c5d6c6ffe2",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9ae9a4cd-a179-4d9e-a30c-285e320f182c",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bc5a1ab1-e5d3-46c4-bc8d-2ef69e16fe14",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e1c614ad-e498-4763-bfe1-fd16e96709a4",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c3341afd-4d23-4a4e-b984-3022f5432fa1",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8ccd4a3a-844f-40ab-9874-6dd5dcac39ca",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "64ae7fca-d450-4176-b98d-25b867b0f232",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "627e8b94-e17c-46bf-8f65-c6a1c3842c27",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "930b184f-6115-47b9-adee-6a62c504af59",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,

          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "caac1138-123c-4b8e-82e8-54bb1753094f",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8e93aa11-ea00-4ffa-af37-23084e3c2d6f",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "af78c7c2-ba09-45a0-8fec-3d37ccff28ab",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "2ef373cc-ea1f-453f-a5fe-3be06543bd6c",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": { }
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": { }
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": { }
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": { }
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": { }
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": { }
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": { }
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "24.0.2",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  },
  "users" : [ 
    {
      "id" : "747393fa-ddb2-4b9a-bbd7-e54d0aa4fdac",
      "createdTimestamp" : 1592588127442,
      "username" : "{{ .users.administrator.username }}",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "firstName" : "Administrator",
      "lastName" : "Administrator",
      "email" :  "{{ .users.administrator.username }}@{{ .clients.simva.externalDomain }}",
      "credentials" : [ {
        "id" : "1b0d2adf-20cd-485e-8396-7ce79942e625",
        "type" : "password",
        "createdDate" : 1592588138265,
        "secretData" : "{{ .users.administrator.secretData }}",
        "credentialData" : "{{ .users.administrator.credentialData }}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "uma_authorization", "administrator", "offline_access" ],
      "clientRoles" : {
        "account" : [ "view-profile", "manage-account" ],
        "realm-management" : [
          "view-clients",
          "view-events",
          "view-authorization",
          "create-client",
          "manage-authorization",
          "manage-realm",
          "manage-identity-providers",
          "query-clients",
          "query-groups",
          "manage-clients",
          "impersonation",
          "query-realms",
          "view-users",
          "query-users",
          "view-realm",
          "view-identity-providers",
          "manage-events",
          "manage-users"
        ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "d22fe280-ad59-46ab-90a4-89049e9518a6",
      "createdTimestamp" : 1592588089565,
      "username" : "{{ .users.researcher.username }}",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "firstName" : "Researcher",
      "lastName" : "Researcher",
      "email" :  "{{ .users.researcher.username }}@{{ .clients.simva.externalDomain }}",
      "credentials" : [ {
        "id" : "779aa3d0-a7c7-4f1d-a3f7-cb546399ae93",
        "type" : "password",
        "createdDate" : 1592588100119,
        "secretData" : "{{ .users.researcher.secretData }}",
        "credentialData" : "{{ .users.researcher.credentialData }}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "uma_authorization", "offline_access", "researcher" ],
      "clientRoles" : {
        "account" : [ "view-profile", "manage-account" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "25b70094-4cbc-4e57-b555-eccd0e879da6",
      "createdTimestamp" : 1592588013241,
      "username" :  "{{ .users.student.username }}",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "firstName" : "Student",
      "lastName" : "Student",
      "email" :  "{{ .users.student.username }}@{{ .clients.simva.externalDomain }}",
      "credentials" : [ {
        "id" : "ad102266-601d-44af-a678-84c33e7b5db2",
        "type" : "password",
        "createdDate" : 1592588021194,
        "secretData" : "{{ .users.student.secretData }}",
        "credentialData" : "{{ .users.student.credentialData }}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "student", "uma_authorization", "offline_access" ],
      "clientRoles" : {
        "account" : [ "view-profile", "manage-account" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "102f1cde-078c-4253-8d1c-25689602c773",
      "createdTimestamp" : 1592586858577,
      "username" :  "{{ .users.teacher.username }}",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "firstName" : "teacher",
      "lastName" : "Teacher",
      "email" :  "{{ .users.teacher.username }}@{{ .clients.simva.externalDomain }}",
      "credentials" : [ {
        "id" : "da4a2a9b-d321-4ef5-be04-6f3050f5f470",
        "type" : "password",
        "createdDate" : 1592586892890,
        "secretData" : "{{ .users.teacher.secretData }}",
        "credentialData" : "{{ .users.teacher.credentialData }}"
      } ],
      "attributes" : {
      },
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "uma_authorization", "teacher", "offline_access" ],
      "clientRoles" : {
        "account" : [ "view-profile", "manage-account" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "34c47206-d4b1-4d7b-859f-c5ce260ade75",
      "createdTimestamp" : 1592588057292,
      "username" :  "{{ .users.teaching_assistant.username }}",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "firstName" : "Teaching",
      "lastName" : "Assistant",
      "email" :  "{{ .users.teaching_assistant.username }}@{{ .clients.simva.externalDomain }}",
      "credentials" : [ {
        "id" : "68a63b77-5b73-45ed-9dd6-f7f346d65643",
        "type" : "password",
        "createdDate" : 1592588074036,
        "secretData" : "{{ .users.teaching_assistant.secretData }}",
        "credentialData" : "{{ .users.teaching_assistant.credentialData }}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "uma_authorization", "teaching-assistant", "offline_access" ],
      "clientRoles" : {
        "account" : [ "view-profile", "manage-account" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }
  ]
}